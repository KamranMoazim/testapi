name: CI-build-push-update-ecs

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get ECS Service IP
        run: |
          ecs_service_info=$(aws ecs describe-services --cluster fypCluster --services my-dotnetapi-service)
          echo "ECS ecs_service_info: $ecs_service_info"
          task_id=$(echo "$ecs_service_info" | jq -r '.services[0].deployments[0].taskDefinition')
          echo "Task ID: $task_id"
          # task_definition_info=$(aws ecs describe-task-definition --task-definition $task_id)
          # echo "Task Definition Info: $task_definition_info"
          # task_info=$(aws ecs describe-tasks --cluster fypCluster --tasks arn:aws:ecs:us-east-1:893103861086:task-definition/dotnettestapitask:4)
          task_info=$(aws ecs describe-tasks --cluster fypCluster --tasks task_id
          echo "Task Info: $task_info"


      # - name: Download task definition
      #   run: |
      #     aws ecs describe-task-definition --task-definition ${{ secrets.ECS_FAMILY }} --query taskDefinition > task-definition.json

      # - name: Log in to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     registry: ${{ secrets.AWS_ECR_REGISTRY }}
      #     region: ${{ secrets.AWS_REGION }}
      #     mask-password: true
      #     registry-type: public
      #     skip-logout: false

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.AWS_ECR_REGISTRY }}:latest, ${{ secrets.AWS_ECR_REGISTRY }}:${{ github.run_number }}

      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     container-name: dotnettestapicontainer
      #     image: public.ecr.aws/c8d5x6z9/dotnettestapirepo:latest
      #   env:
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: my-dotnetapi-service
      #     cluster: fypCluster
      #     wait-for-service-stability: true

      # - name: Get ECS Service IP
      #   run: echo "::set-output name=ecs-service-ip::$(aws ecs describe-services --cluster fypCluster --services my-dotnetapi-service --query 'services[0].networkBindings[0].bindIP' --output text)"

      # - name: Update IP in GitHub repository
      #   run: echo "${{ steps.ecs-service-ip.outputs.ecs-service-ip }}" > updated-ip.txt

      # - name: Update IP in Repository
      #   run: |
      #     git config --global user.email "github-actions@github.com"
      #     git config --global user.name "GitHub Actions"
      #     git add .
      #     git commit -m "Update ECS service IP"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}